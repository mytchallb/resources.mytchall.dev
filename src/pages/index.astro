---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import ResourceList from "../components/ResourceList.vue";
import Nav from "../components/Nav.vue";
import Sidebar from "../components/Sidebar.vue";

const resources = await getCollection("resources");

let categories = resources.map((resource) => resource.data.category ?? "Unset");
let uniqueCategories = [...new Set(categories)].sort((a, b) =>
  a.toLowerCase().localeCompare(b.toLowerCase())
);
let categoriesWithCount = uniqueCategories.map((category) => ({
  name: category,
  count: categories.filter((c) => c === category).length,
}));

let tags = resources.flatMap((resource) => resource.data.tags ?? []);
let uniqueTags = [...new Set(tags)].sort((a, b) =>
  a.toLowerCase().localeCompare(b.toLowerCase())
);
// remove hardcoded tags
uniqueTags = uniqueTags.filter(
  (tag) => !["free", "freemium", "open-source"].includes(tag)
);
---

<Layout>
  <div class="flex h-screen w-full overflow-hidden">
    <Sidebar categories={categoriesWithCount} client:load />
    <div class="flex-1 flex flex-col min-w-0">
      <Nav client:load tags={uniqueTags} />
      <ResourceList
        categories={categoriesWithCount}
        resources={resources}
        client:load
      />
    </div>
  </div>
</Layout>

<script></script>
